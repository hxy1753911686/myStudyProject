<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.school.estimate.dao.UserDao">
    <resultMap id="BaseResultMap" type="com.school.estimate.domain.User">
        <result column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="phone" property="phone"/>
        <result column="email" property="email"/>
        <result column="create_time" property="createTime"/>
        <result column="login_time" property="loginTime"/>
        <result column="last_login_time" property="lastLoginTime"/>
        <result column="count" property="count"/>

        <association property="roles" javaType="com.school.estimate.domain.Role">
            <result column="id" property="id"  />
            <result column="role_code" property="roleCode" />
            <result column="role_name" property="roleName" />
        </association>
    </resultMap>

    <!-- 如果不用parameterMap,直接在以下的parameterMap中寫類路徑，會報錯 -->
    <parameterMap id="User" type="com.school.estimate.domain.User"/>

    <select id="findByName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
            id,username,password,phone,email,create_time,login_time,last_login_time,count
        from users
        where username like CONCAT(CONCAT('%', #{name}), '%')
        order by id;
    </select>

    <select id="findUserById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
            id,username,password,phone,email,create_time,login_time,last_login_time,count
        from users
        where id = #{id}
    </select>

    <select id="findRoleIdByUserId" parameterType="java.lang.Long" resultType="java.lang.Integer">
        select
            r.id
        from users u
        left join user_role ur on ur.user_id = u.id
        left join role r on r.id = ur.role_id
        where u.id = #{id}
    </select>

    <select id="findAllUser" resultMap="BaseResultMap" resultType="User">
        select
            id,username,password,phone,email,create_time,login_time,last_login_time,count
        from users
        order by id
    </select>

    <select id="findUserByPage" resultMap="BaseResultMap" resultType="User">
        select
            id,username,password,phone,email,create_time,login_time,last_login_time,count
        from users
        order by id
        limit #{start},#{size}
    </select>

    <insert id="saveUser" parameterMap="User" useGeneratedKeys="true" keyProperty="id">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            select LAST_INSERT_ID();
        </selectKey>
        insert into users(id,username,password,phone,email,create_time,login_time,last_login_time,count) values(#{id},#{username},#{password},#{phone},#{email},now(),null,null,0);
    </insert>

    <insert id="saveUserRole" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        insert into user_role
        ( user_id,role_id)
        values
        <foreach collection="roleList" item="item" index="index" separator=",">
            (
            #{userId},
            #{item}
            )
        </foreach>
    </insert>

    <update id="updateUser" parameterType="com.school.estimate.domain.User">
        update users
        <trim prefix="set" suffixOverrides=",">
            <if test="username!=null">
                username = #{username},
            </if>
            <if test="password!=null">
                password = #{password},
            </if>
            <if test="phone!=null">
                phone = #{phone},
            </if>
            <if test="email!=null">
                email = #{email},
            </if>
            <if test="loginTime!=null">
                login_time = #{loginTime},
            </if>
            <if test="lastLoginTime!=null">
                last_login_time = #{lastLoginTime},
            </if>
            <if test="count!=null">
                count = #{count},
            </if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteUser" parameterType="java.util.List">
        delete from users where 1>2
              or id in
        <foreach collection="list"  item="item" open="(" separator="," close=")"  >
              #{item}
        </foreach>
    </delete>

    <delete id="deleteUserRole" parameterType="java.util.List">
        delete from user_role where 1>2
              or user_id in
        <foreach collection="list"  item="item" open="(" separator="," close=")"  >
              #{item}
        </foreach>
    </delete>

</mapper>