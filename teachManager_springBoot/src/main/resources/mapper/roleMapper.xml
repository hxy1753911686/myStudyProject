<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.school.estimate.dao.RoleDao">
    <resultMap id="BaseResultMap" type="com.school.estimate.domain.Role">
        <result column="id" property="id"  />
        <result column="role_code" property="roleCode" />
        <result column="role_name" property="roleName" />
    </resultMap>

    <resultMap id="rolePermission" type="com.school.estimate.domain.Role_Permission">
        <result column="id" property="id"  />
        <result column="role_id" property="roleId" />
        <result column="permission_id" property="permissionId" />
    </resultMap>

    <!-- 如果不用parameterMap,直接在以下的parameterMap中寫類路徑，會報錯 -->
    <parameterMap id="Role" type="com.school.estimate.domain.Role" />
    <parameterMap id="Role_Permission" type="com.school.estimate.domain.Role_Permission" />

    <select id="findByName" resultType="Role" parameterType="java.lang.String">
        select
            id,role_code,role_name
        from estimate.role
        where role_name like CONCAT(CONCAT('%', #{name}), '%')
        order by id;
    </select>

    <select id="findRoleById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
            id,role_code,role_name
        from estimate.role
        where id = #{id}
    </select>

    <select id="findAllRole" resultMap="BaseResultMap" resultType="Role">
        select
            id,role_code,role_name
        from estimate.role
        order by id;
    </select>

    <insert id="saveRole" parameterMap="Role" useGeneratedKeys="true" keyProperty="id">
        insert into role(id,role_code,role_name) values(#{id},#{roleCode},#{roleName});
    </insert>

    <update id="updateRole" parameterMap="Role">
        update estimate.role
        set
        <if test="roleCode!=null">
            role_code = #{roleCode}
        </if>
        <if test="roleName!=null">
            ,role_name = #{roleName}
        </if>
        where id = #{id}
    </update>

    <update id="updateRolePer" parameterMap="Role_Permission">
        update estimate.role_permission
        set
        <if test="permissionIds!=null">
            permission_id = #{permissionIds}
        </if>
        where id = #{id}
    </update>

    <delete id="deleteRole" parameterType="java.lang.Long">
        delete from estimate.role where id = #{id}
    </delete>

    <delete id="deleteRolePre" parameterType="java.lang.Long">
        delete from estimate.role_permission where role_id = #{id}
    </delete>

    <select id="findRolesOfUserId" resultMap="BaseResultMap" resultType="Role" parameterType="java.lang.Long">
        select
            r.id,r.role_code,r.role_name
        from estimate.role r,user_role u
        where u.user_id = #{id} and u.role_id = r.id
        order by r.id;
    </select>

    <select id="getNewId" resultType="java.lang.Long">
        select LAST_INSERT_ID();
    </select>

    <insert id="saveRolePer" parameterMap="Role_Permission" useGeneratedKeys="true" keyProperty="id">
        insert into estimate.role_permission
        ( id,role_id,permission_id)
        values
            (#{id},
            #{roleId},
            #{permissionIds});
    </insert>

    <select id="findRolePerByRoleId" parameterType="java.lang.Long" resultType="com.school.estimate.domain.Role_Permission">
        select
            *
        from estimate.role_permission
        where role_id = #{id}
    </select>

    <select id="findPermissionByRoleId" parameterType="java.lang.Long" resultType="java.lang.String">
        select
            permission_id
        from estimate.role_permission
        where role_id = #{id}
    </select>

</mapper>